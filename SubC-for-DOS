

	SUBC CROSS COMPILER FOR DOS/8086

	**************************************************************
	*** The DOS/8086 port is HIGHLY EXPERIMENTAL at the moment ***
	**************************************************************

	As of version 2014-03-23, the SubC compiler has some limited
	support for cross-compiling SubC to DOS/8086 EXE format. The
	following limitations currently exist:

	* The tool chain can only generate small-model EXE files.

	  The SubC compiler itself is too big to fit in a small-model
	  DOS executable.

	* There is no BSS segment, so static arrays are packed
	  into the data segment, thereby increasing the size of
	  the resulting EXE file unnecessarily. Note: this is
	  unrelated to the above issues.

	  Workaround: use malloc() instead of static arrays.

	* There are some subtle differences between S86 and popular
	  DOS assemblers, e.g.: S86 assumes that undefined symbols
	  are external, etc.

	The S86 tool chain and related utilities originally had quite
	a few 16-bit dependencies. They have been modified to run on
	32- and 64-bit hosts, and probably do not run on 16-bit
	systems any longer, so bootstrapping the compiler on a DOS
	system is currently not possible.


	STATUS

	Scc86 currently passes the pointer test suite (tests/ptest.c)
	and the systest suite except for _fork(), execve(), and _wait().
	_time() just returns 0 at the moment. argc/argv/environ cannot
	be tested due to lack of _fork() and _execve(), but they can be
	checked with the sys tool (also contained in tests/).


	COMPILING AND INSTALLING SCC86

	First build and install the SubC compiler for your platform.
	If your platform is not supported, you are currently out of
	luck.

	To build the DOS/8086 cross compiler, run:

		./configure -m 8086 -s DOS

	Then cd to src/ and run make:

		make

	This step will build the stage-zero cross compiler scc0, the
	DOS crt0 file, and the DOS/8086 runtime library.

	You *cannot* triple-test this compiler on a Unix machine,
	because it emits 8086 instructions in TASM format.

	To install the cross compiler, run

		make install-scc86

	This step will install the include files and runtime support
	in $(PREFIX)/scc86 and the cross compiler binary as scc86 in
	$(BINDIR).

	You also need to build and install the s86 tool chain, which
	is contained in the s86 directory:

		cd ../s86
		make all

	BTW, if you plan to compile these programs with a C compiler
	other than SubC, you will have to make sure that the char
	data type is unsigned.

	Edit at least the BINDIR variable in Makefile before installing:

		vi Makefile   # change BINDIR
		make install

	At this point, you should be able to compile SubC programs to
	DOS/EXE by running

		scc86 file.c ...

	The output will be placed in a file named "aout.exe" by default.

